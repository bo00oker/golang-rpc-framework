# API Gateway配置
gateway:
  port: 8080
  read_timeout: 15s                # 降低读超时
  write_timeout: 15s               # 降低写超时
  enable_cors: true
  enable_auth: true
  enable_metrics: true
  enable_rate_limit: true
  rate_limit: 5000                 # 提升5倍限流

# 注册中心类型配置
registry:
  type: "nacos"  # nacos, etcd

server:
  address: ":50051"
  port: 50051
  
  # 高并发优化配置
  max_concurrent_requests: 10000  # 提升10倍并发能力
  request_timeout: 30s
  max_connections: 5000            # 提升5倍连接数
  connection_timeout: 3s           # 降低连接超时
  keep_alive_time: 60s             # 增加保活时间
  keep_alive_timeout: 10s          # 增加保活超时
  rate_limit: 5000                 # 提升5倍限流阈值
  enable_metrics: true
  
  # 内存池配置
  enable_memory_pool: true
  memory_pool_size: 10000          # 提升10倍内存池大小
  memory_pool_max_size: 100000     # 提升10倍最大内存池
  
  # 异步处理配置
  enable_async: true
  async_worker_count: 32           # 增加到32个工作协程
  async_queue_size: 50000          # 提升50倍队列大小
  
  # 健康检查配置
  enable_health_check: true
  health_check_interval: 30s
  health_check_timeout: 5s

client:
  timeout: 30s
  keep_alive: 30s
  max_recv_msg_size: 4194304  # 4MB
  max_send_msg_size: 4194304  # 4MB
  retry_attempts: 3
  retry_delay: 1s
  load_balance_type: "round_robin"
  
  # 高并发优化配置
  max_connections: 500             # 提升5倍连接数
  max_idle_conns: 100              # 提升10倍空闲连接数
  conn_timeout: 3s                 # 降低连接超时
  idle_timeout: 300s               # 增加空闲超时
  max_retries: 5                   # 增加重试次数
  retry_backoff: 100ms             # 降低重试間隔
  circuit_breaker_threshold: 10    # 增加熔断阈值
  circuit_breaker_timeout: 60s     # 增加熔断超时
  
  # 缓存配置
  enable_cache: true
  cache_ttl: 5m
  cache_max_size: 10000            # 提升10倍缓存大小
  
  # 异步处理配置
  enable_async: true
  async_worker_count: 32           # 增加到32个工作协程
  async_queue_size: 50000          # 提升50倍队列大小

etcd:
  endpoints:
    - "localhost:2379"
  timeout: 5s
  username: ""
  password: ""

nacos:
  server_addr: "localhost:8848"
  namespace: "public"
  group: "DEFAULT_GROUP"
  timeout: 10s
  username: "nacos"
  password: "nacos"

nats:
  url: "nats://localhost:4222"
  timeout: 10s
  username: ""
  password: ""

log:
  level: "info"
  format: "json"
  output: "file"
  filename: "logs/app.log"
  max_size: 100
  max_backups: 3
  max_age: 28
  compress: true
  # 新增配置项
  show_caller: true      # 是否显示代码行数
  enable_trace_id: true  # 是否自动添加trace_id

trace:
  service_name: "rpc-framework"
  service_version: "v1.0.0"
  environment: "development"
  jaeger_endpoint: "http://localhost:14268/api/traces"
  sample_rate: 1.0
  enable_console: true

# 数据库配置
database:
  driver: "mysql"  # mysql, postgres
  dsn: "user:password@tcp(localhost:3306)/rpc_framework?charset=utf8mb4&parseTime=True&loc=Local"
  max_open_conns: 100
  max_idle_conns: 10
  conn_max_lifetime: 1h
  conn_max_idle_time: 30m

# 缓存配置
cache:
  type: "redis"  # redis, memory
  default_ttl: 1h
  max_size: 1000
  enable_stats: true
  redis:
    addr: "localhost:6379"
    password: ""
    db: 0
    pool_size: 10
    min_idle_conns: 5
    dial_timeout: 5s
    read_timeout: 3s
    write_timeout: 3s

# 安全配置
security:
  jwt_secret: "your-secret-key-here"
  token_expiry: 1h
  refresh_expiry: 24h
  issuer: "rpc-framework"
  enable_tls: false
  cert_file: "./certs/server.crt"
  key_file: "./certs/server.key"

# 指标监控配置
metrics:
  enable: true
  port: 9090
  path: "/metrics"
  namespace: "rpc_framework"
  subsystem: "server"

# 健康检查配置
health:
  enable: true
  port: 8080
  endpoint: "/health"

# 测试配置
test:
  enable_integration_tests: true
  test_db_dsn: "user:password@tcp(localhost:3306)/rpc_framework_test?charset=utf8mb4&parseTime=True&loc=Local"
  load_test:
    duration: 30s
    concurrency: 50
    requests_per_sec: 100
    ramp_up_time: 5s
